// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spartacus SAP OPF integration schematics: ng-add SAP OPF feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { CmsConfig, I18nConfig, provideConfig } from "@spartacus/core";
import { opfBaseTranslationChunksConfig, opfBaseTranslations } from "@spartacus/opf/base/assets";
import { OPF_BASE_FEATURE, OpfBaseRootModule, OpfConfig } from "@spartacus/opf/base/root";

@NgModule({
  declarations: [],
  imports: [
    OpfBaseRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [OPF_BASE_FEATURE]: {
        module: () =>
          import('@spartacus/opf/base').then((m) => m.OpfBaseModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: opfBaseTranslations,
      chunks: opfBaseTranslationChunksConfig,
    },
  }),
  provideConfig(<OpfConfig>{
    opf: {
      baseUrl: "PLACEHOLDER_OPF_BASE_URL",
      commerceCloudPublicKey: "PLACEHOLDER_COMMERCE_CLOUD_PUBLIC_KEY",
    },
  })
  ]
})
export class OpfFeatureModule { }
"
`;

exports[`Spartacus SAP OPF integration schematics: ng-add SAP OPF feature general setup should add the feature using the lazy loading syntax 2`] = `
"import { NgModule } from '@angular/core';
import { CmsConfig, I18nConfig, provideConfig } from "@spartacus/core";
import { opfBaseTranslationChunksConfig, opfBaseTranslations } from "@spartacus/opf/base/assets";
import { OPF_BASE_FEATURE, OpfBaseRootModule, OpfConfig } from "@spartacus/opf/base/root";

@NgModule({
  declarations: [],
  imports: [
    OpfBaseRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [OPF_BASE_FEATURE]: {
        module: () =>
          import('@spartacus/opf/base').then((m) => m.OpfBaseModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: opfBaseTranslations,
      chunks: opfBaseTranslationChunksConfig,
    },
  }),
  provideConfig(<OpfConfig>{
    opf: {
      baseUrl: "PLACEHOLDER_OPF_BASE_URL",
      commerceCloudPublicKey: "PLACEHOLDER_COMMERCE_CLOUD_PUBLIC_KEY",
    },
  })
  ]
})
export class OpfFeatureModule { }
"
`;

exports[`Spartacus SAP OPF integration schematics: ng-add SAP OPF feature general setup should add the feature using the lazy loading syntax 3`] = `""`;

exports[`Spartacus SAP OPF integration schematics: ng-add SAP OPF feature general setup styling should create a proper scss file 1`] = `
"@import "../../styles-config";
@import "@spartacus/opf";
"
`;

exports[`Spartacus SAP OPF integration schematics: ng-add SAP OPF feature general setup styling should update angular.json 1`] = `
"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "",
  "projects": {
    "schematics-test": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "standalone": false
        },
        "@schematics/angular:directive": {
          "standalone": false
        },
        "@schematics/angular:pipe": {
          "standalone": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/schematics-test",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/opf.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "3.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "schematics-test:build:production"
            },
            "development": {
              "buildTarget": "schematics-test:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "buildTarget": "schematics-test:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/opf.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          }
        }
      }
    }
  }
}"
`;
