{
  "name": "storefrontapp",
  "version": "0.0.0",
  "license": "Apache-2.0",
  "author": "SAP, Spartacus team",
  "engines": {
    "node": "^18.20.0 || ^20.12.0"
  },
  "scripts": {
    "build:analyze": "npm run build -- --stats-json && npx --yes webpack-bundle-analyzer dist/storefrontapp/stats.json",
    "build": "env-cmd --no-override -e dev,b2c,$SPA_ENV nx build storefrontapp --configuration production",
    "build:core": "nx build core --configuration production",
    "build:storefrontlib": "nx build storefrontlib --configuration production",
    "build:asm": "npm --prefix feature-libs/asm run build:schematics && nx build asm --configuration production",
    "build:user": "npm --prefix feature-libs/user run build:schematics && nx build user --configuration production",
    "build:assets": "npm --prefix ./projects/assets run build",
    "build:cart": "npm --prefix feature-libs/cart run build:schematics && nx build cart --configuration production",
    "build:cdc": "npm --prefix integration-libs/cdc run build:schematics && nx build cdc --configuration production",
    "build:cdp": "npm --prefix integration-libs/cdp run build:schematics && nx build cdp --configuration production",
    "build:cds": "npm --prefix integration-libs/cds run build:schematics && nx build cds --configuration production",
    "build:checkout": "npm --prefix feature-libs/checkout run build:schematics && nx build checkout --configuration production",
    "build:customer-ticketing": "npm --prefix feature-libs/customer-ticketing run build:schematics && nx build customer-ticketing --configuration production",
    "build:digital-payments": "npm --prefix integration-libs/digital-payments run build:schematics && nx build digital-payments --configuration production",
    "build:s4-service": "npm --prefix integration-libs/s4-service run build:schematics && nx build s4-service --configuration production",
    "build:epd-visualization": "npm --prefix integration-libs/epd-visualization run build:schematics && nx build epd-visualization --configuration production",
    "build:estimated-delivery-date": "npm --prefix feature-libs/estimated-delivery-date run build:schematics && nx build estimated-delivery-date --configuration production",
    "build:order": "npm --prefix feature-libs/order run build:schematics && nx build order --configuration production",
    "build:libs": "nx build core --configuration production && nx build storefrontlib --configuration production && concurrently --kill-others-on-fail npm:build:schematics npm:build:user && npm run build:cart && npm run build:pdf-invoices && npm run build:order && npm run build:storefinder && concurrently --kill-others-on-fail npm:build:checkout npm:build:asm npm:build:tracking npm:build:customer-ticketing && concurrently --kill-others-on-fail npm:build:organization npm:build:product npm:build:product-configurator npm:build:product-multi-dimensional && concurrently --kill-others-on-fail npm:build:requested-delivery-date && concurrently --kill-others-on-fail npm:build:estimated-delivery-date && concurrently --kill-others-on-fail npm:build:smartedit npm:build:qualtrics npm:build:assets npm:build:cds npm:build:cdc npm:build:cdp npm:build:digital-payments npm:build:epd-visualization npm:build:s4om npm:build:omf npm:build:cpq-quote npm:build:segment-refs npm:build:opps npm:build:pickup-in-store npm:build:quote && npm run build:setup && npm run build:s4-service",
    "build:organization": "npm --prefix feature-libs/organization run build:schematics && nx build organization --configuration production",
    "build:pdf-invoices": "npm --prefix feature-libs/pdf-invoices run build:schematics && nx build pdf-invoices --configuration production",
    "build:pickup-in-store": "npm --prefix feature-libs/pickup-in-store run build:schematics && nx build pickup-in-store --configuration production",
    "build:product": "npm --prefix feature-libs/product run build:schematics && nx build product --configuration production",
    "build:product-configurator": "npm --prefix feature-libs/product-configurator run build:schematics && nx build product-configurator --configuration production",
    "build:product-multi-dimensional": "npm --prefix feature-libs/product-multi-dimensional run build:schematics && nx build product-multi-dimensional --configuration production",
    "build:s4om": "npm --prefix integration-libs/s4om run build:schematics && nx build s4om --configuration production",
    "build:omf": "npm --prefix integration-libs/omf run build:schematics && nx build omf --configuration production",
    "build:cpq-quote": "npm --prefix integration-libs/cpq-quote run build:schematics && npx nx build cpq-quote --configuration production",
    "build:segment-refs": "npm --prefix integration-libs/segment-refs run build:schematics && nx build segment-refs --configuration production",
    "build:opps": "npm --prefix integration-libs/opps run build:schematics && nx build opps --configuration production",
    "build:qualtrics": "npm --prefix feature-libs/qualtrics run build:schematics && nx build qualtrics --configuration production",
    "build:requested-delivery-date": "npm --prefix feature-libs/requested-delivery-date run build:schematics && nx build requested-delivery-date --configuration production",
    "build:schematics": "npm --prefix projects/schematics run build",
    "build:setup": "nx build setup --configuration production",
    "build:ssr": "env-cmd --no-override -e dev,b2c,$SPA_ENV nx run storefrontapp:server:production",
    "build:ssr:ci": "env-cmd -e ci,b2c,$SPA_ENV nx run storefrontapp:server:production",
    "build:ssr:local-http-backend": "env-cmd -e local-http,b2c,$SPA_ENV nx run storefrontapp:server:production",
    "build:storefinder": "npm --prefix feature-libs/storefinder run build:schematics && nx build storefinder --configuration production",
    "build:smartedit": "npm --prefix feature-libs/smartedit run build:schematics && nx build smartedit --configuration production",
    "build:tracking": "npm --prefix feature-libs/tracking run build:schematics && nx build tracking --configuration production",
    "build:quote": "npm --prefix feature-libs/quote run build:schematics && nx build quote --configuration production",
    "config:update": "ts-node ./tools/config/index.ts --fix",
    "config:check": "ts-node ./tools/config/index.ts",
    "generate:deps": "ts-node ./tools/schematics/dependency-collector.ts",
    "e2e:open": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:open",
    "e2e:open:ci": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:open:ci",
    "e2e:open:ci:b2b": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:open:ci:b2b",
    "e2e:open:b2b": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:open:b2b",
    "e2e:open:ccv2": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:open:ccv2",
    "e2e:open:mcs": "npm --prefix ./projects/storefrontapp-e2e-cypress run run cy:open:mcs",
    "e2e:run": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run",
    "e2e:run:b2b": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:b2b",
    "e2e:run:core": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:core",
    "e2e:run:ci": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci",
    "e2e:run:ci:ssr": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:ssr",
    "e2e:run:ci:core:ssr": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:core:ssr",
    "e2e:run:ci:b2b": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:b2b",
    "e2e:run:ci:flaky": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:flaky",
    "e2e:run:ci:core": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:core",
    "e2e:run:ci:core:b2b": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:core:b2b",
    "e2e:run:ci:cds": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:cds",
    "e2e:run:ci:product-configuration": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:product-configurator-vc",
    "e2e:run:ci:cdc": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:cdc",
    "e2e:run:ci:cdp": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:cdp",
    "e2e:run:ci:digital-payments": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:digital-payments",
    "e2e:run:ci:s4-service": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:s4-service",
    "e2e:run:ci:epd-visualization": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:epd-visualization",
    "e2e:run:ci:ccv2": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:ccv2",
    "e2e:run:ci:ccv2-b2b": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:ccv2-b2b",
    "e2e:run:ci:ccv2-product-configurator": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:ccv2-product-configurator",
    "e2e:run:ci:mcs": "npm --prefix ./projects/storefrontapp-e2e-cypress run run cy:run:ci:mcs",
    "e2e:run:ci:cdc-b2b": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:cdc-b2b",
    "e2e:run:ci:segment-refs": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:segment-refs",
    "e2e:run:ci:opps": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:opps",
    "e2e:run:ci:my-account-v2": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:my-account-v2",
    "e2e:run:ci:release": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:release",
    "e2e:run:ci:b2b:release": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:b2b:release",
    "e2e:run:ci:ssr:release": "npm --prefix ./projects/storefrontapp-e2e-cypress run cy:run:ci:ssr:release",
    "generate:docs": "npx @compodoc/compodoc@1.1.13 -p tsconfig.compodoc.json",
    "generate:publish:docs": "npm run generate:docs && npm run publish:docs",
    "graph": "nx graph",
    "i18n-lint": "i18n-lint -t \"{{,}}\" projects/storefrontlib/**/*.html feature-libs/**/*.html integration-libs/**/*.html -a alt,title,placeholder,aria-label",
    "lint": "nx run-many --all --target=lint",
    "lint:styles": "stylelint \"{projects,feature-libs}/**/*.scss\"",
    "prettier": "prettier --config ./.prettierrc --list-different \"{projects,feature-libs,core-libs,integration-libs}/**/*{.ts,.js,.json,.scss,.html}\"",
    "prettier:fix": "prettier --config ./.prettierrc --list-different \"{projects,feature-libs,core-libs,integration-libs}/**/*{.ts,.js,.json,.scss,.html}\" --write",
    "start": "env-cmd --no-override -e dev,b2c,$SPA_ENV nx serve storefrontapp --configuration=development",
    "start:b2b": "env-cmd --no-override -e dev,b2b,$SPA_ENV nx serve storefrontapp --configuration=development",
    "start:ci": "env-cmd --no-override -e ci,b2c,$SPA_ENV nx serve storefrontapp --configuration=development",
    "start:ci:b2b": "env-cmd --no-override -e ci,b2b,$SPA_ENV nx serve storefrontapp --configuration=development",
    "start:prod": "env-cmd --no-override -e dev,b2c,$SPA_ENV nx serve storefrontapp --configuration=production",
    "start:pwa": "cd ./dist/storefrontapp/ && http-server --silent --proxy http://localhost:4200? -p 4200",
    "test": "nx test",
    "test:all-schematics": "set -e; npm --prefix ./projects/schematics test -- -u; for dir in feature-libs/* integration-libs/*; do (cd $dir && npm run test:schematics -- -u); done",
    "test:libs": "concurrently \"nx test core --code-coverage\" \"nx test storefrontlib --code-coverage\" \"nx test cart --code-coverage\" \"nx test organization --code-coverage\" \"nx test storefinder --code-coverage\" \"nx test smartedit --code-coverage\" \"nx test asm --code-coverage\" \"nx test qualtrics --code-coverage\" \"nx test product --code-coverage\" \"nx test product-configurator --code-coverage\" \"nx test product-multi-dimensional --code-coverage\" \"nx test customer-ticketing --code-coverage\" \"nx test cdc --code-coverage\" \"nx test s4-service --code-coverage\" \"nx test cdp --code-coverage\" \"nx test opps --code-coverage\" \"nx test setup --code-coverage\" \"nx test checkout --code-coverage\" \"nx test order --code-coverage\" \"nx test digital-payments --code-coverage\" \"nx test epd-visualization --code-coverage\" \"nx test pickup-in-store --code-coverage\" \"nx test s4om --code-coverage\" \"nx test cpq-quote --code-coverage\" \"nx test omf --code-coverage\" \"nx test requested-delivery-date --code-coverage\" \"nx test estimated-delivery-date --code-coverage\" \"nx test pdf-invoices --code-coverage\" \"nx test quote --code-coverage\"",
    "test:storefront:lib": "nx test storefrontlib --source-map --code-coverage",
    "dev:ssr": "env-cmd --no-override -e dev,b2c,$SPA_ENV cross-env NODE_TLS_REJECT_UNAUTHORIZED=0 nx run storefrontapp:serve-ssr",
    "serve:ssr": "node dist/storefrontapp-server/main.js",
    "serve:ssr:ci": "NODE_TLS_REJECT_UNAUTHORIZED=0 SSR_TIMEOUT=0 node dist/storefrontapp-server/main.js",
    "serve:ssr:dev": "cross-env NODE_TLS_REJECT_UNAUTHORIZED=0 node dist/storefrontapp-server/main.js",
    "test:ssr": "env-cmd -e dev nx test ssr-tests",
    "test:ssr:ci": "env-cmd -e ci nx test ssr-tests",
    "prerender": "nx run storefrontapp:prerender --routes-file projects/storefrontapp/prerender.txt",
    "prerender:dev": "env-cmd --no-override -e dev,$SPA_ENV cross-env NODE_TLS_REJECT_UNAUTHORIZED=0 nx run storefrontapp:prerender --routes-file projects/storefrontapp/prerender.txt",
    "prerender:cds": "env-cmd --no-override -e cds nx run storefrontapp:prerender --routes-file projects/storefrontapp/prerender.txt",
    "publish:docs": "npx --yes gh-pages@^2.2.0 -d documentation -m \"Compodocs updates\"",
    "test:cds:lib": "nx test cds --code-coverage",
    "build:cds:ssr": "env-cmd --no-override -e dev,b2c,cds nx run storefrontapp:server:production",
    "dev:cds:ssr": "env-cmd --no-override -e dev,b2c,cds cross-env NODE_TLS_REJECT_UNAUTHORIZED=0 nx run storefrontapp:serve-ssr",
    "prerender:cds:dev": "env-cmd --no-override -e dev,cds cross-env NODE_TLS_REJECT_UNAUTHORIZED=0 nx run storefrontapp:prerender --routes-file projects/storefrontapp/prerender.txt"
  },
  "private": false,
  "dependencies": {
    "@angular/animations": "^17.0.5",
    "@angular/common": "^17.0.5",
    "@angular/compiler": "^17.0.5",
    "@angular/core": "^17.0.5",
    "@angular/forms": "^17.0.5",
    "@angular/platform-browser": "^17.0.5",
    "@angular/platform-browser-dynamic": "^17.0.5",
    "@angular/platform-server": "^17.0.5",
    "@angular/pwa": "^17.0.5",
    "@angular/router": "^17.0.5",
    "@angular/service-worker": "^17.0.5",
    "@angular/ssr": "^17.0.5",
    "@fontsource/open-sans": "^4.5.14",
    "@fortawesome/fontawesome-free": "6.6.0",
    "@ng-select/ng-select": "^12.0.4",
    "@ngrx/effects": "^17.0.1",
    "@ngrx/router-store": "^17.0.1",
    "@ngrx/store": "^17.0.1",
    "@types/google.maps": "^3.54.0",
    "angular-oauth2-oidc": "^17.0.1",
    "bootstrap": "^4.6.2",
    "comment-json": "^4.2.3",
    "express": "^4.21.0",
    "hamburgers": "^1.2.1",
    "i18next": "^23.7.6",
    "i18next-http-backend": "^2.4.2",
    "i18next-resources-to-backend": "^1.2.0",
    "ngx-infinite-scroll": "^17.0.0",
    "rxjs": "^7.8.0",
    "tslib": "^2.6.2",
    "zone.js": "0.14.2"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "^17.0.0",
    "@angular-devkit/build-angular": "^17.3.5",
    "@angular-devkit/core": "^17.0.5",
    "@angular-devkit/schematics": "^17.0.5",
    "@angular-eslint/builder": "^17.1.0",
    "@angular-eslint/eslint-plugin": "^17.0.1",
    "@angular-eslint/eslint-plugin-template": "^17.0.1",
    "@angular-eslint/schematics": "^17.1.0",
    "@angular-eslint/template-parser": "17.2.1",
    "@angular-eslint/utils": "^17.1.0",
    "@angular/cli": "~17.3.0",
    "@angular/compiler-cli": "^17.0.5",
    "@angular/language-service": "17.0.5",
    "@babel/runtime": "^7.18.9",
    "@ngrx/store-devtools": "^17.0.1",
    "@nx/angular": "17.3.2",
    "@nx/devkit": "17.3.2",
    "@nx/eslint-plugin": "17.3.2",
    "@nx/jest": "17.3.2",
    "@nx/workspace": "17.3.2",
    "@sapui5/ts-types-esm": "1.120.1",
    "@schematics/angular": "^17.0.5",
    "@swc-node/register": "^1.6.8",
    "@swc/core": "^1.3.85",
    "@types/express": "^4.17.17",
    "@types/fs-extra": "^11.0.1",
    "@types/http-proxy": "^1.17.15",
    "@types/i18next": "^13.0.0",
    "@types/jasmine": "~5.1.0",
    "@types/jest": "^29.4.0",
    "@types/node": "^18.15.11",
    "@types/semver": "7.5.8",
    "@types/shelljs": "^0.8.12",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "@typescript-eslint/utils": "^6.13.1",
    "browser-sync": "^3.0.3",
    "commander": "^12.0.0",
    "concurrently": "^8.0.1",
    "core-js": "^3.30.1",
    "cross-env": "^7.0.3",
    "enquirer": "^2.3.6",
    "env-cmd": "^10.1.0",
    "eslint": "^8.32.0",
    "eslint-plugin-deprecation": "^3.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsdoc": "^46.0.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "fs-extra": "^11.1.1",
    "glob": "^7.1.6",
    "http-proxy": "^1.18.1",
    "http-server": "^14.1.1",
    "i18n-lint": "^1.1.0",
    "jasmine-core": "~5.4.0",
    "jasmine-marbles": "^0.9.2",
    "jest": "^29.0.0",
    "jest-circus": "^29.0.0",
    "jest-environment-node": "^29.0.0",
    "jest-preset-angular": "13.1.6",
    "jsonc-parser": "~3.3.0",
    "karma": "~6.4.1",
    "karma-chrome-launcher": "~3.2.0",
    "karma-cli": "^2.0.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "^2.0.0",
    "karma-junit-reporter": "^2.0.1",
    "ng-packagr": "17.0.3",
    "nx": "17.3.2",
    "parse5": "^7.1.2",
    "postcss": "^8.4.31",
    "postcss-scss": "^4.0.6",
    "prettier": "~3.3.0",
    "rimraf": "^5.0.0",
    "sass-true": "^8.0.0",
    "semver": "^7.5.2",
    "shelljs": "^0.8.5",
    "stylelint": "^16.3.1",
    "stylelint-config-standard-scss": "^13.1.0",
    "stylelint-scss": "^6.2.1",
    "ts-jest": "^29.1.1",
    "ts-morph": "^23.0.0",
    "ts-node": "^10.6.0",
    "typescript": "^5.2.2",
    "webpack": "~5.95.0",
    "webpack-cli": "^5.0.0"
  }
}
