@import '../../../theme';

// To control visual effects while searching the searchbox requires
// some CSS rules to the outer elements.
%cx-searchbox__body {
  // hide the mobile search button by default and how on mobile
  button.search {
    @include media-breakpoint-up(md) {
      display: none;
    }
  }
  // hide the search icon on mobile
  div.search-icon {
    @include media-breakpoint-down(sm) {
      display: none;
    }
  }

  // when there are results and the searchbox is active
  // we display the searchbox
  &.searchbox-is-active {
    &.has-searchbox-results {
      cx-searchbox {
        .results {
          display: block;
        }
      }

      // the searchbox requires an overlay over the page (except for the header)
      // we do this with an overlay under the header, on top of the rest of the page
      header {
        position: relative;
        z-index: 100;
      }
      cx-storefront {
        &:before {
          content: '';
          position: fixed;
          left: 0;
          top: 0;
          width: 100%;
          height: 100%;
          z-index: 10;

          background: rgba(0, 0, 0, 0.5);
        }
      }
    }
  }

  &:not(.searchbox-is-active) {
    @include media-breakpoint-down(sm) {
      // hide the input on mobile when there's no interaction with searchbox
      cx-searchbox {
        // cxFeat_a11ySearchboxLabel class is only applied if a11ySearchboxLabel flag is true
        // Needed to add this class manually since:
        // 1. %cx-searchbox__body can't be styled with `@include forFeature('...')`
        // 2. We can't apply changes for when feature flag is NOT enabled and it would be
        // complicated to achieve desired behaviour without this possibility.
        // TODO: When removing feature flag `a11ySearchboxLabel` next major release remove also cxFeat_a11ySearchboxLabe class
        // and all styles for label:not(.cxFeat_a11ySearchboxLabel)
        label:not(.cxFeat_a11ySearchboxLabel) {
          input {
            // we cannot use display:none, visible:hidden or opacity: 0
            // as this will no longer emit a focus event to the controller logic
            width: 0;
            padding: 0;
          }
        }

        .cxFeat_a11ySearchboxLabel {
          .cx-label-inner-container,
          input {
            width: 0;
            padding: 0;
            border: none;
          }

          .cx-input-label {
            display: none;
          }
        }

        button.reset {
          display: none;
        }
      }
    }
  }
}

%cx-searchbox {
  --cx-mobile-header-height: 60px;
  @include media-breakpoint-up(md) {
    // we position the parent relative to ensure the result panel
    // is aligned to the left of searchbox
    position: relative;
    z-index: 0;
  }

  z-index: 10;
  display: block;

  > * {
    z-index: 20;
    @include media-breakpoint-up(md) {
      background-color: var(--cx-color-inverse);
      position: relative;
    }
  }

  @include forFeature('a11ySearchboxLabel') {
    > .cx-searchbox-container {
      @include media-breakpoint-up(md) {
        background-color: unset;
        position: unset;
      }
    }
  }

  a,
  .message {
    padding: 6px 16px;
    color: currentColor;
    user-select: none;
  }

  @include forFeature('a11ySearchboxLabel') {
    .cx-input-label {
      color: var(--cx-color-text);

      @include media-breakpoint-down(sm) {
        position: absolute;
        top: var(--cx-mobile-header-height);
        left: 10px;
        z-index: 30;
      }
    }
  }

  label:not(.cxFeat_a11ySearchboxLabel) {
    display: flex;
    align-content: stretch;
    margin: 0;
    padding-top: 6px;
    padding-inline-end: 6px;
    padding-bottom: 6px;
    padding-inline-start: 10px;

    @include media-breakpoint-up(md) {
      border: 1px solid var(--cx-color-medium);
      width: 27vw;
      min-width: 300px;
      max-width: 550px;
      // hide search icon when the input is dirty
      &.dirty div.search-icon {
        display: none;
      }
    }

    input {
      background: none;
      border: none;
      outline: none;
      display: block;

      @include media-breakpoint-down(sm) {
        position: absolute;
        left: 0;
        top: 57px;
        width: 100%;
        background-color: var(--cx-color-secondary);
        padding: 6px 16px;
        height: 48px;
        border-bottom: 1px solid var(--cx-color-light);
      }

      flex-basis: 100%;
      height: 35px;
      color: var(--cx-color-text);
      z-index: 20;

      @include placeholder {
        color: currentColor;

        @include forFeature('a11yImproveContrast') {
          color: var(--cx-color-secondary);
        }
      }
    }

    // hide reset icon when the input is empty
    &:not(.dirty) button.reset {
      display: none;
    }

    button,
    div.search-icon {
      flex-basis: 48px;
      text-align: center;
      background: none;
      border: none;
      padding: 6px;
      color: var(--cx-color-medium);

      @include forFeature('a11yImproveContrast') {
        color: var(--cx-color-secondary);
      }

      @include media-breakpoint-down(sm) {
        color: var(--cx-color-primary);
        font-size: var(--cx-font-size, 1.563rem);
      }

      &.reset cx-icon {
        &:before {
          font-size: 1.4rem;
        }
        @include media-breakpoint-down(sm) {
          position: relative;
          left: 74px;
          z-index: 20;
          top: 52px;
          margin-top: 0;
        }
      }
    }
  }

  label.cxFeat_a11ySearchboxLabel {
    display: flex;
    align-content: stretch;
    align-items: center;
    margin: 0;
    padding-top: 6px;
    padding-inline-end: 6px;
    padding-bottom: 6px;
    padding-inline-start: 10px;
    gap: 15px;

    @include media-breakpoint-up(md) {
      // hide search icon when the input is dirty
      &.dirty div.search-icon {
        display: none;
      }
    }

    &:not(.dirty) button.reset {
      display: none;
    }

    .cx-label-inner-container {
      display: flex;
      align-content: stretch;
      align-items: center;
      padding-top: 6px;
      padding-inline-end: 6px;
      padding-bottom: 6px;
      padding-inline-start: 10px;

      @include media-breakpoint-up(md) {
        border: 1px solid var(--cx-color-medium);
        width: 27vw;
        min-width: 300px;
        max-width: 550px;
        background-color: var(--cx-color-inverse);
      }

      @include media-breakpoint-down(sm) {
        position: absolute;
        left: 0;
        top: var(--cx-mobile-header-height);
        width: 100%;
        background-color: var(--cx-color-inverse);
        z-index: 20;
        padding-top: 25px;
      }
    }

    input {
      background: none;
      border: none;
      outline: none;
      display: block;

      @include media-breakpoint-down(sm) {
        width: 100%;
        padding: 6px 16px;
        height: 48px;
        border: 1px solid var(--cx-color-medium);
        border-radius: 4px;
      }

      flex-basis: 100%;
      height: 35px;
      color: var(--cx-color-text);
      z-index: 20;

      @include placeholder {
        color: currentColor;

        @include forFeature('a11yImproveContrast') {
          color: var(--cx-color-dark);
        }
      }
    }

    button,
    div.search-icon {
      flex-basis: 48px;
      text-align: center;
      background: none;
      border: none;
      padding: 6px;
      color: var(--cx-color-medium);

      @include forFeature('a11yImproveContrast') {
        color: var(--cx-color-secondary);
      }

      @include media-breakpoint-down(sm) {
        color: var(--cx-color-primary);
        font-size: var(--cx-font-size, 1.563rem);

        &.reset {
          display: none;
        }
      }

      &.reset cx-icon {
        &:before {
          font-size: 1.4rem;
        }
        @include media-breakpoint-down(sm) {
          position: relative;
          left: 74px;
          z-index: 20;
          top: 52px;
          margin-top: 0;
        }
      }
    }
  }

  .results {
    // hide the result by default
    display: none;
    position: absolute;
    left: 0;
    width: 100%;
    color: #000;
    background-color: #fff;
    font-size: var(--cx-font-small, 1rem);

    @include forFeature('a11yImproveContrast') {
      @include type('8');
    }

    @include media-breakpoint-down(sm) {
      top: 105px;

      @include forFeature('a11ySearchboxLabel') {
        top: calc(var(--cx-mobile-header-height) + 79px);
      }
      z-index: 10;
    }

    a {
      text-decoration: none;
      cursor: pointer;

      font-weight: 800;

      .highlight,
      .search-results-highlight {
        font-weight: normal;
        font-style: normal;
      }

      &:hover,
      &:focus {
        background: var(--cx-color-light);
        color: currentColor;
      }
    }
    .suggestions {
      display: flex;
      flex-wrap: wrap;
      list-style: none;
      padding-inline-start: 0;
      margin-bottom: 0;
      li,
      a {
        flex: 100%;
        line-height: 2rem;
        display: block;
      }
    }

    .recent-searches {
      display: flex;
      flex-wrap: wrap;
      list-style: none;
      padding-inline-start: 0;
      margin-bottom: 0;
      border-top: solid 1px var(--cx-color-light);
      li,
      a {
        flex: 100%;
        line-height: 2rem;
        display: block;
      }
    }

    .products {
      list-style: none;
      padding-inline-start: 0;
      margin-bottom: 0;

      @include media-breakpoint-down(sm) {
        display: none;
      }

      a {
        display: grid;
        grid-column-gap: 16px;

        &.has-media {
          // create a grid layout in case we show an image
          grid-template-columns: 50px 1fr;
        }

        border-top: solid 1px var(--cx-color-light);

        cx-media {
          grid-row: 1 / 3;
        }

        div.name {
          text-overflow: ellipsis;

          font-size: inherit;
          font-weight: inherit;

          @include forFeature('a11yImproveContrast') {
            @include type('8');
          }

          // Required for text-overflow to do anything
          white-space: nowrap;
          overflow: hidden;
        }
        .price {
          font-weight: normal;

          @include forFeature('a11yImproveContrast') {
            @include type('8');
          }
        }
      }
    }
  }

  @include cx-highContrastTheme {
    border: 1px solid var(--cx-color-dark);
    label {
      background-color: var(--cx-color-background);
      input {
        background-color: var(--cx-color-background);
        color: var(--cx-color-text);
      }
      input:focus {
        outline-style: none;
        box-shadow: none;
      }
    }
    .suggestions {
      background-color: var(--cx-color-background);
      color: var(--cx-color-text);
    }
    .results {
      border: 1px solid var(--cx-color-text);
      a {
        &:hover,
        &:focus {
          background: var(--cx-color-text);
          color: var(--cx-color-background);
        }
      }
    }
    .products {
      background-color: var(--cx-color-background);
      color: var(--cx-color-text);
    }
  }
}
